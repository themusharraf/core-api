services:
  web:
    container_name: fastapi_app
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always

  db:
    container_name: postgres_db
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis_cache
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

  worker:
    build: .
    container_name: celery_worker
    command: celery -A celery_worker.celery_app worker -l info --concurrency=1 -Q email,cleanup
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always

  beat:
    build: .
    container_name: celery_beat
    command: celery -A celery_worker.celery_app beat --loglevel=info
    depends_on:
      - worker
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always

volumes:
  postgres_data:
